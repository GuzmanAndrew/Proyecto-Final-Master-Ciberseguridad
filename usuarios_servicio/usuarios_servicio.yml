openapi: 3.0.0
info:
  title: Usuarios API
  description: API para la gestión de usuarios
  version: 1.0.0
servers:
  - url: http://localhost:8082
    description: Entorno local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Usuario:
      type: object
      properties:
        idUsuarios:
          type: integer
          description: ID del usuario
          example: 1
        usuario:
          type: string
          description: Nombre de usuario
          example: "john_doe"
        contrasena:
          type: string
          description: Contraseña del usuario
          example: "password123"
        nombres:
          type: string
          description: Nombres del usuario
          example: "John"
        apellidos:
          type: string
          description: Apellidos del usuario
          example: "Doe"
        correo:
          type: string
          description: Correo electrónico del usuario
          example: "john.doe@example.com"
        telefono:
          type: string
          description: Teléfono del usuario
          example: "+34 123 456 789"
security:
  - bearerAuth: []
paths:
  /usuarios/all:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
  /usuarios/by-id/{id}:
    get:
      summary: Obtener usuario por ID
      description: Devuelve la información de un usuario específico basado en su ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a obtener
          schema:
            type: integer
            example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Información del usuario obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
  /usuarios/by-username/{username}:
    get:
      summary: Obtener usuario por nombre de usuario
      description: Devuelve la información de un usuario específico basado en su nombre de usuario.
      parameters:
        - name: username
          in: path
          required: true
          description: Nombre de usuario
          schema:
            type: string
            example: "john_doe"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Información del usuario obtenida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
  /usuarios/create:
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario con la información proporcionada.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Usuario creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Solicitud incorrecta
  /usuarios/update/{id}:
    put:
      summary: Actualizar un usuario existente
      description: Actualiza la información de un usuario existente basado en su ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
  /usuarios/delete/{id}:
    delete:
      summary: Eliminar un usuario
      description: Elimina un usuario existente basado en su ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: integer
            example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuario eliminado con éxito
          content:
            text/plain:
              schema:
                type: string
                example: "¡Usuario eliminado con éxito!"
        '404':
          description: Usuario no encontrado
